{"Name":"Hover Card","Description":"For sighted users to preview content available behind a link.","ImportCommand":"npm install @radix-ui/react-hover-card","SubComponents":[{"Name":"Root","Description":"Contains all the parts of a hover card.","Props":[{"Name":"defaultOpen","Required":false,"Description":"The open state of the hover card when it is initially rendered. Use when you do not need to control its open state.","DataType":"bool"},{"Name":"open","Required":false,"Description":"The controlled open state of the hover card. Must be used in conjunction with onOpenChange.","DataType":"bool"},{"Name":"onOpenChange","Required":false,"Description":"Event handler called when the open state of the hover card changes.","DataType":"(open: boolean) => void"},{"Name":"openDelay","Required":false,"Description":"Event handler called when the open state of the hover card changes.","DataType":"number"},{"Name":"closeDelay","Required":false,"Description":"The duration from when the mouse leaves the trigger or content until the hover card closes.","DataType":"number"}]},{"Name":"Trigger","Description":"The link that opens the hover card when hovered.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"}]},{"Name":"Portal","Description":"When used, portals the content part into the body.","Props":[{"Name":"forceMount","Required":false,"Description":"Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries. If used on this part, it will be inherited by HoverCard.Content.","DataType":"bool"},{"Name":"container","Required":false,"Description":"Specify a container element to portal the content into.","DataType":"HTMLElement"}]},{"Name":"Content","Description":"The component that pops out when the hover card is open.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"forceMount","Required":false,"Description":"Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries. It inherits from HoverCard.Portal.","DataType":"bool"},{"Name":"side","Required":false,"Description":"The preferred side of the trigger to render against when open. Will be reversed when collisions occur and avoidCollisions is enabled.","DataType":"\"top\" | \"right\" | \"bottom\" | \"left\""},{"Name":"sideOffset","Required":false,"Description":"The preferred side of the trigger to render against when open. Will be reversed when collisions occur and avoidCollisions is enabled.","DataType":"number"},{"Name":"align","Required":false,"Description":"The preferred alignment against the trigger. May change when collisions occur.","DataType":"\"start\" | \"center\" | \"end\""},{"Name":"alignOffset","Required":false,"Description":"The preferred alignment against the trigger. May change when collisions occur.","DataType":"number"},{"Name":"avoidCollisions","Required":false,"Description":"When true, overrides the side andalign preferences to prevent collisions with boundary edges.","DataType":"bool"},{"Name":"collisionBoundary","Required":false,"Description":"The element used as the collision boundary. By default this is the viewport, though you can provide additional element(s) to be included in this check.","DataType":"Boundary"},{"Name":"collisionPadding","Required":false,"Description":"The distance in pixels from the boundary edges where collision detection should occur. Accepts a number (same for all sides), or a partial padding object, for example: { top: 20, left: 20 }.","DataType":"number | Padding"},{"Name":"arrowPadding","Required":false,"Description":"The padding between the arrow and the edges of the content. If your content has border-radius, this will prevent it from overflowing the corners.","DataType":"number"},{"Name":"sticky","Required":false,"Description":"The sticky behavior on the align axis. \"partial\" will keep the content in the boundary as long as the trigger is at least partially in the boundary whilst \"always\" will keep the content in the boundary regardless.","DataType":"\"partial\" | \"always\""},{"Name":"hideWhenDetached","Required":false,"Description":"The sticky behavior on the align axis. \"partial\" will keep the content in the boundary as long as the trigger is at least partially in the boundary whilst \"always\" will keep the content in the boundary regardless.","DataType":"bool"}]},{"Name":"Arrow","Description":"An optional arrow element to render alongside the hover card. This can be used to help visually link the trigger with the HoverCard.Content. Must be rendered inside HoverCard.Content.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"width","Required":false,"Description":"The width of the arrow in pixels.","DataType":"number"},{"Name":"height","Required":false,"Description":"The height of the arrow in pixels.","DataType":"number"}]}]}