{"Name":"Navigation Menu","Description":"A collection of links for navigating websites.","ImportCommand":"npm install @radix-ui/react-navigation-menu","SubComponents":[{"Name":"Root","Description":"Contains all the parts of a navigation menu.","Props":[{"Name":"defaultValue","Required":false,"Description":"The value of the menu item that should be active when initially rendered. Use when you do not need to control the value state.","DataType":"string"},{"Name":"value","Required":false,"Description":"The controlled value of the menu item to activate. Should be used in conjunction with onValueChange.","DataType":"string"},{"Name":"onValueChange","Required":false,"Description":"Event handler called when the value changes.","DataType":"(value: string) => void"},{"Name":"delayDuration","Required":false,"Description":"Event handler called when the value changes.","DataType":"number"},{"Name":"skipDelayDuration","Required":false,"Description":"How much time a user has to enter another trigger without incurring a delay again.","DataType":"number"},{"Name":"dir","Required":false,"Description":"The reading direction of the menu when applicable. If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.","DataType":"\"ltr\" | \"rtl\""},{"Name":"orientation","Required":false,"Description":"The reading direction of the menu when applicable. If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.","DataType":"\"horizontal\" | \"vertical\""}]},{"Name":"Sub","Description":"Signifies a submenu. Use it in place of the root part when nested to create a submenu.","Props":[{"Name":"defaultValue","Required":false,"Description":"The orientation of the menu.","DataType":"string"},{"Name":"value","Required":false,"Description":"The controlled value of the sub menu item to activate. Should be used in conjunction with onValueChange.","DataType":"string"},{"Name":"onValueChange","Required":false,"Description":"Event handler called when the value changes.","DataType":"(value: string) => void"},{"Name":"orientation","Required":false,"Description":"Event handler called when the value changes.","DataType":"\"horizontal\" | \"vertical\""}]},{"Name":"List","Description":"Contains the top level menu items.","Props":[{"Name":"asChild","Required":false,"Description":"The orientation of the menu.","DataType":"bool"}]},{"Name":"Item","Description":"A top level menu item, contains a link or trigger with content combination.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"value","Required":false,"Description":"A unique value that associates the item with an active value when the navigation menu is controlled. This prop is managed automatically when uncontrolled.","DataType":"string"}]},{"Name":"Trigger","Description":"The button that toggles the content.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"}]},{"Name":"Content","Description":"Contains the content associated with each trigger.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"disableOutsidePointerEvents","Required":false,"Description":"When true, hover/focus/click interactions will be disabled on elements outside the bounds of the component. Users will need to click twice on outside elements to interact with them: Once to close the navigation menu, and again to activate the element.","DataType":"bool"},{"Name":"onEscapeKeyDown","Required":false,"Description":"Event handler called when the escape key is down. It can be prevented by calling event.preventDefault.","DataType":"(event: KeyboardEvent) => void"},{"Name":"onPointerDownOutside","Required":false,"Description":"Event handler called when the escape key is down. It can be prevented by calling event.preventDefault.","DataType":"(event: PointerDownOutsideEvent) => void"},{"Name":"onFocusOutside","Required":false,"Description":"Event handler called when a pointer event occurs outside the bounds of the component. It can be prevented by calling event.preventDefault.","DataType":"(event: FocusOutsideEvent) => void"},{"Name":"onInteractOutside","Required":false,"Description":"Event handler called when focus moves outside the bounds of the component. It can be prevented by calling event.preventDefault.","DataType":"(event: React.FocusEvent | MouseEvent | TouchEvent) => void"},{"Name":"forceMount","Required":false,"Description":"Event handler called when an interaction (pointer or focus event) happens outside the bounds of the component. It can be prevented by calling event.preventDefault.","DataType":"bool"}]},{"Name":"Link","Description":"A navigational link.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"active","Required":false,"Description":"Used to identify the link as the currently active page.","DataType":"bool"},{"Name":"onSelect","Required":false,"Description":"Event handler called when the user selects a link (via mouse or keyboard). Calling event.preventDefault in this handler will prevent the navigation menu from closing when selecting that link.","DataType":"(event: Event) => void"}]},{"Name":"Indicator","Description":"An optional indicator element that renders below the list, is used to highlight the currently active trigger.","Props":[{"Name":"asChild","Required":false,"Description":"Event handler called when the user selects a link (via mouse or keyboard). Calling event.preventDefault in this handler will prevent the navigation menu from closing when selecting that link.","DataType":"bool"},{"Name":"forceMount","Required":false,"Description":"Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries.","DataType":"bool"}]},{"Name":"Viewport","Description":"An optional viewport element that is used to render active content outside of the list.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"forceMount","Required":false,"Description":"Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries.","DataType":"bool"}]}]}