{
    "Name": "Scroll Area",
    "Description": "Augments native scroll functionality for custom, cross-browser styling.",
    "ImportCommand": "@radix-ui/react-scroll-area",
    "SubComponentData": [
        {
            "Name": "Root",
            "Description": "Contains all the parts of a scroll area.",
            "PropData": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "PropType": "boolean",
                    "PropTypeValue": "boolean"
                },
                {
                    "Name": "scrollHideDelay",
                    "Required": false,
                    "Description": "Describes the nature of scrollbar visibility, similar to how the scrollbar preferences in MacOS control visibility of native scrollbars.  \"auto\" means that scrollbars are visible when content is overflowing on the corresponding orientation. \"always\" means that scrollbars are always visible regardless of whether the content is overflowing. \"scroll\" means that scrollbars are visible when the user is scrolling along its corresponding orientation. \"hover\" when the user is scrolling along its corresponding orientation and when the user is hovering over the scroll area.",
                    "PropType": "number",
                    "PropTypeValue": "number"
                }
            ],
            "EnumData": [
                {
                    "Name": "type",
                    "Required": false,
                    "Description": "Describes the nature of scrollbar visibility, similar to how the scrollbar preferences in MacOS control visibility of native scrollbars.  \"auto\" means that scrollbars are visible when content is overflowing on the corresponding orientation. \"always\" means that scrollbars are always visible regardless of whether the content is overflowing. \"scroll\" means that scrollbars are visible when the user is scrolling along its corresponding orientation. \"hover\" when the user is scrolling along its corresponding orientation and when the user is hovering over the scroll area.",
                    "PropType": "enum",
                    "PropTypeValue": "\"auto\" | \"always\" | \"scroll\" | \"hover\""
                },
                {
                    "Name": "dir",
                    "Required": false,
                    "Description": "The reading direction of the scroll area. If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.",
                    "PropType": "enum",
                    "PropTypeValue": "\"ltr\" | \"rtl\""
                }
            ]
        },
        {
            "Name": "Viewport",
            "Description": "The viewport area of the scroll area.",
            "PropData": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "The reading direction of the scroll area. If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.",
                    "PropType": "boolean",
                    "PropTypeValue": "boolean"
                }
            ],
            "EnumData": []
        },
        {
            "Name": "Scrollbar",
            "Description": "The vertical scrollbar. Add a second Scrollbar with an orientation prop to enable horizontal scrolling.",
            "PropData": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "PropType": "boolean",
                    "PropTypeValue": "boolean"
                },
                {
                    "Name": "forceMount",
                    "Required": false,
                    "Description": "Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries.",
                    "PropType": "boolean",
                    "PropTypeValue": "boolean"
                }
            ],
            "EnumData": [
                {
                    "Name": "orientation",
                    "Required": false,
                    "Description": "The orientation of the scrollbar",
                    "PropType": "enum",
                    "PropTypeValue": "\"horizontal\" | \"vertical\""
                }
            ]
        },
        {
            "Name": "Thumb",
            "Description": "The thumb to be used in ScrollArea.Scrollbar.",
            "PropData": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "The orientation of the scrollbar",
                    "PropType": "boolean",
                    "PropTypeValue": "boolean"
                }
            ],
            "EnumData": []
        },
        {
            "Name": "Corner",
            "Description": "The corner where both vertical and horizontal scrollbars meet.",
            "PropData": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "PropType": "boolean",
                    "PropTypeValue": "boolean"
                }
            ],
            "EnumData": []
        }
    ]
}