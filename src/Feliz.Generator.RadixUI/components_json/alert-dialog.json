{
    "Name": "Alert Dialog",
    "Description": "A modal dialog that interrupts the user with important content and expects a response.",
    "ImportCommand": "npm install @radix-ui/react-alert-dialog",
    "SubComponents": [
        {
            "Name": "Root",
            "Description": "Contains all the parts of an alert dialog.",
            "Props": [
                {
                    "Name": "defaultOpen",
                    "Required": false,
                    "Description": "The open state of the dialog when it is initially rendered. Use when you do not need to control its open state.",
                    "DataType": "bool"
                },
                {
                    "Name": "open",
                    "Required": false,
                    "Description": "The controlled open state of the dialog. Must be used in conjunction with onOpenChange.",
                    "DataType": "bool"
                },
                {
                    "Name": "onOpenChange",
                    "Required": false,
                    "Description": "Event handler called when the open state of the dialog changes.",
                    "DataType": "(open: boolean) => void"
                }
            ]
        },
        {
            "Name": "Trigger",
            "Description": "A button that opens the dialog.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Event handler called when the open state of the dialog changes.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Portal",
            "Description": "When used, portals your overlay and content parts into the body.",
            "Props": [
                {
                    "Name": "forceMount",
                    "Required": false,
                    "Description": "Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries. If used on this part, it will be inherited by AlertDialog.Overlay and AlertDialog.Content.",
                    "DataType": "bool"
                },
                {
                    "Name": "container",
                    "Required": false,
                    "Description": "Specify a container element to portal the content into.",
                    "DataType": "HTMLElement"
                }
            ]
        },
        {
            "Name": "Overlay",
            "Description": "A layer that covers the inert portion of the view when the dialog is open.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                },
                {
                    "Name": "forceMount",
                    "Required": false,
                    "Description": "Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries. It inherits from AlertDialog.Portal.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Content",
            "Description": "Contains content to be rendered when the dialog is open.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                },
                {
                    "Name": "forceMount",
                    "Required": false,
                    "Description": "Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries. It inherits from AlertDialog.Portal.",
                    "DataType": "bool"
                },
                {
                    "Name": "onOpenAutoFocus",
                    "Required": false,
                    "Description": "Event handler called when focus moves to the destructive action after opening. It can be prevented by calling event.preventDefault.",
                    "DataType": "(event: Event) => void"
                },
                {
                    "Name": "onCloseAutoFocus",
                    "Required": false,
                    "Description": "Event handler called when focus moves to the destructive action after opening. It can be prevented by calling event.preventDefault.",
                    "DataType": "(event: Event) => void"
                },
                {
                    "Name": "onEscapeKeyDown",
                    "Required": false,
                    "Description": "Event handler called when focus moves to the trigger after closing. It can be prevented by calling event.preventDefault.",
                    "DataType": "(event: KeyboardEvent) => void"
                }
            ]
        },
        {
            "Name": "Cancel",
            "Description": "A button that closes the dialog. This button should be distinguished visually from AlertDialog.Action buttons.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Event handler called when the escape key is down. It can be prevented by calling event.preventDefault.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Action",
            "Description": "A button that closes the dialog. These buttons should be distinguished visually from the AlertDialog.Cancel button.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Title",
            "Description": "An accessible name to be announced when the dialog is opened. Alternatively, you can provide aria-label or aria-labelledby to AlertDialog.Content and exclude this component.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Description",
            "Description": "An accessible description to be announced when the dialog is opened. Alternatively, you can provide aria-describedby to AlertDialog.Content and exclude this component.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Description",
            "Description": "An accessible description to be announced when the dialog is opened. Alternatively, you can provide aria-describedby to AlertDialog.Content and exclude this component.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        }
    ]
}