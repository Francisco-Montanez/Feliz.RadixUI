{
    "Name": "Tabs",
    "Description": "A set of layered sections of content—known as tab panels—that are displayed one at a time.",
    "ImportCommand": "@radix-ui/react-tabs",
    "SubComponents": [
        {
            "Name": "Root",
            "Description": "Contains all the tabs component parts.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                },
                {
                    "Name": "defaultValue",
                    "Required": false,
                    "Description": "The value of the tab that should be active when initially rendered. Use when you do not need to control the state of the tabs.",
                    "DataType": "string"
                },
                {
                    "Name": "value",
                    "Required": false,
                    "Description": "The controlled value of the tab to activate. Should be used in conjunction with onValueChange.",
                    "DataType": "string"
                },
                {
                    "Name": "onValueChange",
                    "Required": false,
                    "Description": "Event handler called when the value changes.",
                    "DataType": "(value: string) => void"
                },
                {
                    "Name": "orientation",
                    "Required": false,
                    "Description": "Event handler called when the value changes.",
                    "DataType": "\"horizontal\" | \"vertical\" | undefined"
                },
                {
                    "Name": "dir",
                    "Required": false,
                    "Description": "The orientation of the component.",
                    "DataType": "\"ltr\" | \"rtl\""
                },
                {
                    "Name": "activationMode",
                    "Required": false,
                    "Description": "The reading direction of the tabs. If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.",
                    "DataType": "\"automatic\" | \"manual\""
                }
            ]
        },
        {
            "Name": "List",
            "Description": "Contains the triggers that are aligned along the edge of the active content.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "When automatic, tabs are activated when receiving focus. When manual, tabs are activated when clicked.",
                    "DataType": "bool"
                },
                {
                    "Name": "loop",
                    "Required": false,
                    "Description": "When true, keyboard navigation will loop from last tab to first, and vice versa.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Trigger",
            "Description": "The button that activates its associated content.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                },
                {
                    "Name": "value",
                    "Required": true,
                    "Description": "A unique value that associates the trigger with a content.",
                    "DataType": "string"
                },
                {
                    "Name": "disabled",
                    "Required": false,
                    "Description": "When true, prevents the user from interacting with the tab.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Content",
            "Description": "Contains the content associated with each trigger.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                },
                {
                    "Name": "value",
                    "Required": true,
                    "Description": "A unique value that associates the content with a trigger.",
                    "DataType": "string"
                },
                {
                    "Name": "forceMount",
                    "Required": false,
                    "Description": "Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries.",
                    "DataType": "bool"
                }
            ]
        }
    ]
}