{
    "Name": "Form",
    "Description": "Collect information from your users using validation rules.",
    "ImportCommand": "npm install @radix-ui/react-form",
    "SubComponents": [
        {
            "Name": "Root",
            "Description": "Contains all the parts of a form.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                },
                {
                    "Name": "onClearServerErrors",
                    "Required": false,
                    "Description": "Event handler called when the form is submitted or reset and the server errors need to be cleared.",
                    "DataType": "() => void"
                }
            ]
        },
        {
            "Name": "Field",
            "Description": "The wrapper for a field. It handles id/name and label accessibility automatically.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Event handler called when the form is submitted or reset and the server errors need to be cleared.",
                    "DataType": "bool"
                },
                {
                    "Name": "name",
                    "Required": true,
                    "Description": "The name of the field that will be passed down to the control and used to match with validation messages.",
                    "DataType": "string"
                },
                {
                    "Name": "serverInvalid",
                    "Required": false,
                    "Description": "Use this prop to mark the field as invalid on the server.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Label",
            "Description": "A label element which is automatically wired when nested inside a Field part.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "Control",
            "Description": "A control element (by default an input) which is automatically wired when nested inside a Field part.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        },
        {
            "Name": "ValidityState",
            "Description": "Use this render-prop component to access a given fieldâ€™s validity state in render (see ValidityState on MDN). A field's validity is available automatically when nested inside a Field part, otherwise you must pass a name prop to associate it.",
            "Props": [
                {
                    "Name": "children",
                    "Required": false,
                    "Description": "A render function that receives the validity state of the field.",
                    "DataType": "(validity: ValidityState | undefined) => React.ReactNode"
                },
                {
                    "Name": "name",
                    "Required": false,
                    "Description": "A render function that receives the validity state of the field.",
                    "DataType": "string"
                }
            ]
        },
        {
            "Name": "Submit",
            "Description": "The submit button.",
            "Props": [
                {
                    "Name": "asChild",
                    "Required": false,
                    "Description": "Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.",
                    "DataType": "bool"
                }
            ]
        }
    ]
}