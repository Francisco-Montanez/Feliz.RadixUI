{"Name":"Radio Group","Description":"A set of checkable buttons—known as radio buttons—where no more than one of the buttons can be checked at a time.","ImportCommand":"npm install @radix-ui/react-radio-group","SubComponents":[{"Name":"Root","Description":"Contains all the parts of a radio group.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"defaultValue","Required":false,"Description":"The value of the radio item that should be checked when initially rendered. Use when you do not need to control the state of the radio items.","DataType":"string"},{"Name":"value","Required":false,"Description":"The controlled value of the radio item to check. Should be used in conjunction with onValueChange.","DataType":"string"},{"Name":"onValueChange","Required":false,"Description":"Event handler called when the value changes.","DataType":"(value: string) => void"},{"Name":"disabled","Required":false,"Description":"Event handler called when the value changes.","DataType":"bool"},{"Name":"name","Required":false,"Description":"The name of the group. Submitted with its owning form as part of a name/value pair.","DataType":"string"},{"Name":"required","Required":false,"Description":"When true, indicates that the user must check a radio item before the owning form can be submitted.","DataType":"bool"},{"Name":"orientation","Required":false,"Description":"The orientation of the component.","DataType":"\"horizontal\" | \"vertical\" | undefined"},{"Name":"dir","Required":false,"Description":"The orientation of the component.","DataType":"\"ltr\" | \"rtl\""},{"Name":"loop","Required":false,"Description":"The reading direction of the radio group. If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.","DataType":"bool"}]},{"Name":"Item","Description":"An item in the group that can be checked. An input will also render when used within a form to ensure events propagate correctly.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"value","Required":false,"Description":"The value given as data when submitted with a name.","DataType":"string"},{"Name":"disabled","Required":false,"Description":"When true, prevents the user from interacting with the radio item.","DataType":"bool"},{"Name":"required","Required":false,"Description":"When true, indicates that the user must check the radio item before the owning form can be submitted.","DataType":"bool"}]},{"Name":"Indicator","Description":"Renders when the radio item is in a checked state. You can style this element directly, or you can use it as a wrapper to put an icon into, or both.","Props":[{"Name":"asChild","Required":false,"Description":"Change the default rendered element for the one passed as a child, merging their props and behavior.  Read our Composition guide for more details.","DataType":"bool"},{"Name":"forceMount","Required":false,"Description":"Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries.","DataType":"bool"}]}]}